using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleApplication9
{
    class Program
    {
        static void Main(string[] args)
        {
            ListItem head = null;

            addToHead(ref head, 5);
            addToHead(ref head, 10);
            addToHead(ref head, 15);


            PrintRec(head);
            addToTail(ref head, 20);
            PrintRec(head);
            Console.WriteLine();
        }

        static void Print(ListItem Head)
        {
            while (Head != null)
            {
                Console.Write($"{Head.Info} --> ");
                Head = Head.Next;
            }
            Console.WriteLine("Null");
        }

        static void PrintRec(ListItem Head)
        {
            if (Head != null)
            {

                PrintRec(Head.Next);
                Console.Write($"{Head.Info} --> ");
            }
            else
            {
                Console.Write("Null --> ");
            }
        }
        ------------------------Экзамен-----------------------------------------
        // Операция добавления в начало
        static void addToHead(ref ListItem head, int info)
        {
            var item = new ListItem();
            item.Info = info;
            item.Next = head;
            head = item;
        }
        
        // Операция добавления в конец
        static void addToTail(ref ListItem Head, int info)
        {
            var newItem = new ListItem();
            newItem.Info = info;

            if(Head == null)
            {
                Head = newItem;
                return;
            }

            var item = Head;

            while (item.Next != null)
            {
                item = item.Next;
                item.Next = newItem;
            }

        }
        // Поиск элемента в списке
        static void FindElem(ref ListItem Head, int info)
        {
            var newItem = new ListItem();
            newItem.Info = info;

            if(Head == info)
            {
                Console.WriteLine($'Элемент {info} присутствует в списке');
            }
            if(Head == null)
            {
                Console.WriteLine($'Элемент {info} отсутствует в списке');
            }
            var item = Head;

            while (item.Next != null)
            {
                item = item.Next;
                item.Next = newItem;
            }

        }
        
        //Удаление элемента из списка
        public bool Remove(T data)
        {
            Node<T> current = head;
            Node<T> previous = null;

            while (current != null)
            {
                if (current.Data.Equals(data))
                {
                    // Если узел в середине или в конце
                    if (previous != null)
                    {
                        previous.Next = current.Next;
                        if (current.Next == null)
                            tail = previous;
                    }
                    else
                    {
                        head = head.Next;

                        if (head == null)
                            tail = null;
                    }
                    count--;
                    return true;
                }
                previous = current;
                current = current.Next;
            }
            return false;
        }
       

    }
}
